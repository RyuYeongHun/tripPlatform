<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="joeun.project.dao.IMwBolgguriDao">
	<!-- 인기 여행지 TOP 3 -->
	<select id="selectBest" resultType="joeun.project.dto.MwBolgguriDto">
		SELECT
		    B.BOLGGURI_ID,
		    B.TITLE,
		    B.ADDR1,
		    B.FIRSTIMAGE2,
		    B.VIEW_COUNT,
		    NVL(R.REVIEW_COUNT, 0) AS REVIEW_COUNT,
		    NVL(R.AVG_SCORE, 0) AS AVG_SCORE,
		    NVL(((NVL(AVG_SCORE,0 )*50)+(REVIEW_COUNT*2)), 0) AS RANK_SCORE,
		    CASE
		        WHEN C.CODE = 'A02' THEN SUBSTR(C.NAME, 1, 2)
		        ELSE C.NAME
		    END AS CATTITLE
		FROM
		    BOLGGURI B
		LEFT JOIN
		    (SELECT
		        BOLGGURI_ID,
		        COUNT(*) AS REVIEW_COUNT,
		        ROUND(AVG(SCORE), 1) AS AVG_SCORE
		    FROM
		        BOLGGURI_REVIEW
		    GROUP BY
		        BOLGGURI_ID) R
		ON
		    B.BOLGGURI_ID = R.BOLGGURI_ID
		LEFT JOIN
		    CAT_CODE C
		ON
		    B.CAT1 = C.CODE
		<where>
			AND B.FIRSTIMAGE2 IS NOT NULL
			AND B.ADDR1 IS NOT NULL
			AND C.CODE BETWEEN 'A01' AND 'A04'
			AND B.BOLGGURI_DESC IS NOT NULL
	        <if test="areaCode != null and areaCode.trim() != ''">
	            AND B.AREACODE = #{areaCode,jdbcType=VARCHAR}
	        </if>
	    </where>
		ORDER BY RANK_SCORE DESC
		FETCH FIRST 3 ROWS ONLY
	</select>
	<!-- 검색 결과 -->
	<select id="selectAll" resultType="joeun.project.dto.MwBolgguriDto">
		SELECT 
		    B.BOLGGURI_ID,
		    B.ADDR1,
		    B.BOLGGURI_DESC,
		    B.PARKING_CNT,
		    B.FIRSTIMAGE2,
		    B.TITLE,
		    B.VIEW_COUNT,
		    B.MAPX,
		    B.MAPY,
		    NVL(R.REVIEW_COUNT, 0) AS REVIEW_COUNT,
		    NVL(((NVL(AVG_SCORE,0 )*100)+(B.VIEW_COUNT*0.01)+(B.LIKES*0.01)), 0) AS RANK_SCORE,
		    NVL(R.AVG_SCORE, 0) AS AVG_SCORE,
		    CASE
		        WHEN C.CODE = 'A02' THEN SUBSTR(C.NAME, 1, 2)
		        ELSE C.NAME
		    END AS CATTITLE
		FROM BOLGGURI B
		LEFT JOIN
		    (SELECT
		        BOLGGURI_ID,
		        COUNT(*) AS REVIEW_COUNT,
		        ROUND(AVG(SCORE), 1) AS AVG_SCORE
		    FROM
		        BOLGGURI_REVIEW
		    GROUP BY
		        BOLGGURI_ID) R
		ON
		    B.BOLGGURI_ID = R.BOLGGURI_ID
		LEFT JOIN
		    CAT_CODE C
		ON
		    B.CAT1 = C.CODE
		LEFT JOIN
		    AREA_CODE A
		ON
		    B.AREACODE = A.AREACODE
		<where>
			AND B.FIRSTIMAGE2 IS NOT NULL
			AND B.ADDR1 IS NOT NULL
			AND B.BOLGGURI_DESC IS NOT NULL
			AND C.CODE BETWEEN 'A01' AND 'A04'
			<if test="keyword != null and keyword.trim() != ''">
				AND (B.TITLE LIKE CONCAT(CONCAT('%', #{keyword,jdbcType=VARCHAR}), '%')
					OR B.ADDR1 LIKE CONCAT(CONCAT('%', #{keyword,jdbcType=VARCHAR}), '%'))
			</if>
	        <if test="areaCode != null and areaCode.trim() != ''">
	            AND B.AREACODE = #{areaCode,jdbcType=VARCHAR}
	        </if>
	         <if test="list != null and list.size() > 0">
                <foreach item="item" collection="list" open="AND (" separator=" OR " close=")">
                    CAT1 LIKE #{item} || '%'
                </foreach>
	        </if>
    	</where>
    	<choose>
    		<when test="filterNo == 1">
	            ORDER BY BOLGGURI_ID ASC
	        </when>
	        <when test="filterNo == 2">
	            ORDER BY RANK_SCORE DESC
	        </when>
	        <when test="filterNo == 3">
	            ORDER BY AVG_SCORE DESC
	        </when>
	        <when test="filterNo == 4">
	            ORDER BY AVG_SCORE ASC
	        </when>
	        <when test="filterNo == 5">
	            ORDER BY REVIEW_COUNT DESC
	        </when>
	        <otherwise>
	            ORDER BY BOLGGURI_ID ASC
	        </otherwise>
	    </choose>
	    OFFSET #{offset} ROWS FETCH NEXT #{pageSize} ROWS ONLY
	</select>
	<!-- 겸색 결과 카운트 -->
	<select id="selectAllCount" resultType="String">
		SELECT COUNT(*)
		FROM BOLGGURI B
		LEFT JOIN
		    (SELECT
		        BOLGGURI_ID,
		        COUNT(*) AS REVIEW_COUNT,
		        ROUND(AVG(SCORE), 1) AS AVG_SCORE
		    FROM
		        BOLGGURI_REVIEW
		    GROUP BY
		        BOLGGURI_ID) R
		ON
		    B.BOLGGURI_ID = R.BOLGGURI_ID
		LEFT JOIN
		    CAT_CODE C
		ON
		    B.CAT1 = C.CODE
		LEFT JOIN
		    AREA_CODE A
		ON
		    B.AREACODE = A.AREACODE
		WHERE
		    B.FIRSTIMAGE2 IS NOT NULL
		    AND B.ADDR1 IS NOT NULL
		    AND B.BOLGGURI_DESC IS NOT NULL
		    AND C.CODE BETWEEN 'A01' AND 'A04'
	    <if test="keyword != null and keyword.trim() != ''">
			AND (B.TITLE LIKE CONCAT(CONCAT('%', #{keyword,jdbcType=VARCHAR}), '%')
				OR B.ADDR1 LIKE CONCAT(CONCAT('%', #{keyword,jdbcType=VARCHAR}), '%'))
		</if>
		<if test="areaCode != null and areaCode.trim() != ''">
		    AND B.AREACODE = #{areaCode,jdbcType=VARCHAR}
		</if>
		<if test="list != null and list.size() > 0">
		    <foreach item="item" collection="list" open="AND (" separator=" OR " close=")">
		        CAT1 LIKE #{item} || '%'
		    </foreach>
		</if>
	</select>
	<!-- 볼거리 아이디 검색 -->
	<select id="selectId" resultType="joeun.project.dto.MwBolgguriDto">
		SELECT
		    B.BOLGGURI_ID,
		    B.ADDR1,
		    B.BOLGGURI_DESC,
		    B.FIRSTIMAGE2,
		    B.PARKING_CNT,
		    B.TITLE,
		    B.VIEW_COUNT,
		    NVL(R.REVIEW_COUNT, 0) AS REVIEW_COUNT,
		    NVL(R.AVG_SCORE, 0) AS AVG_SCORE,
		    CASE
		        WHEN C.CODE = 'A02' THEN SUBSTR(C.NAME, 1, 2)
		        ELSE C.NAME
		    END AS CATTITLE
		FROM
		    BOLGGURI B
		LEFT JOIN
		    (SELECT
		        BOLGGURI_ID,
		        COUNT(*) AS REVIEW_COUNT,
		        ROUND(AVG(SCORE), 1) AS AVG_SCORE
		    FROM
		        BOLGGURI_REVIEW
		    GROUP BY
		        BOLGGURI_ID) R
		ON
		    B.BOLGGURI_ID = R.BOLGGURI_ID
		LEFT JOIN
		        CAT_CODE C
		    ON
		        B.CAT1 = C.CODE
	    WHERE B.BOLGGURI_ID = #{bolgguri_id}
	</select>
	<!-- 지역메뉴창 리스트-->
	<select id="regionSelectAll" resultType="joeun.project.dto.MwBolgguriRegionDto">
		SELECT
		    AREACODE,
		    CASE
		        WHEN AREACODE = '8' THEN SUBSTR(NAME, 1, 2)
		        WHEN AREACODE = '31' THEN SUBSTR(NAME, 1, 2)
		        WHEN AREACODE = '32' THEN SUBSTR(NAME, 1, 2)
		        WHEN AREACODE = '33' THEN N'충북'
		        WHEN AREACODE = '34' THEN N'충남'
		        WHEN AREACODE = '35' THEN N'경북'
		        WHEN AREACODE = '36' THEN N'경남'
		        WHEN AREACODE = '37' THEN N'전북'
		        WHEN AREACODE = '38' THEN N'전남'
		        WHEN AREACODE = '39' THEN SUBSTR(NAME, 1, 2)
		    ELSE NAME
		    END AS NAME
		FROM
		    AREA_CODE
		ORDER BY TO_NUMBER(AREACODE) ASC
	</select>
	<!-- 카테고리 메뉴창 리스트 -->
	<select id="categorySelectAll" resultType="joeun.project.dto.MwBolgguriCategoryDto">
		SELECT
			CODE,
			CASE
		        WHEN CODE = 'A02' THEN SUBSTR(NAME, 1, 2)
		        ELSE NAME
		    END AS NAME
		FROM CAT_CODE
		WHERE CODE LIKE '___' AND CODE BETWEEN 'A01' AND 'A04'
		ORDER BY CODE
	</select>
	<!-- 지역명  select -->
	<select id="regionSelect" resultType="joeun.project.dto.MwBolgguriRegionDto">
           SELECT
           AREACODE,
           CASE
		        WHEN AREACODE = '8' THEN SUBSTR(NAME, 1, 2)
		        WHEN AREACODE = '32' THEN SUBSTR(NAME, 1, 2)
		        WHEN AREACODE = '33' THEN N'충북'
		        WHEN AREACODE = '34' THEN N'충남'
		        WHEN AREACODE = '35' THEN N'경북'
		        WHEN AREACODE = '36' THEN N'경남'
		        WHEN AREACODE = '37' THEN N'전북'
		        WHEN AREACODE = '38' THEN N'전남'
		    ELSE NAME
		    END AS NAME
           FROM AREA_CODE WHERE AREACODE = #{areaCode}
	</select>

	<!-- 카테고리명  select -->
	<select id="categorySelect" resultType="joeun.project.dto.MwBolgguriCategoryDto">
		SELECT
			CODE,
			CASE
		        WHEN CODE = 'A02' THEN SUBSTR(NAME, 1, 2)
		        ELSE NAME
		    END AS NAME
		FROM CAT_CODE
		WHERE 1=1
		AND CODE LIKE '___'
		<foreach item="item" collection="list" open="AND(" separator=" OR " close=")">
        	CODE LIKE #{item,jdbcType=VARCHAR}
        </foreach>
	</select>
	
</mapper>
 
 
 
 
 
 
 
 
 